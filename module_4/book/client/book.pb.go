// Code generated by protoc-gen-go. DO NOT EDIT.
// source: book.proto

package main

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type BooksRequest struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BooksRequest) Reset()         { *m = BooksRequest{} }
func (m *BooksRequest) String() string { return proto.CompactTextString(m) }
func (*BooksRequest) ProtoMessage()    {}
func (*BooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{0}
}

func (m *BooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BooksRequest.Unmarshal(m, b)
}
func (m *BooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BooksRequest.Marshal(b, m, deterministic)
}
func (m *BooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BooksRequest.Merge(m, src)
}
func (m *BooksRequest) XXX_Size() int {
	return xxx_messageInfo_BooksRequest.Size(m)
}
func (m *BooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BooksRequest proto.InternalMessageInfo

func (m *BooksRequest) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *BooksRequest) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

type AnswerReply struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnswerReply) Reset()         { *m = AnswerReply{} }
func (m *AnswerReply) String() string { return proto.CompactTextString(m) }
func (*AnswerReply) ProtoMessage()    {}
func (*AnswerReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_1e89d0eaa98dc5d8, []int{1}
}

func (m *AnswerReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnswerReply.Unmarshal(m, b)
}
func (m *AnswerReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnswerReply.Marshal(b, m, deterministic)
}
func (m *AnswerReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnswerReply.Merge(m, src)
}
func (m *AnswerReply) XXX_Size() int {
	return xxx_messageInfo_AnswerReply.Size(m)
}
func (m *AnswerReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AnswerReply.DiscardUnknown(m)
}

var xxx_messageInfo_AnswerReply proto.InternalMessageInfo

func (m *AnswerReply) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*BooksRequest)(nil), "main.BooksRequest")
	proto.RegisterType((*AnswerReply)(nil), "main.AnswerReply")
}

func init() { proto.RegisterFile("book.proto", fileDescriptor_1e89d0eaa98dc5d8) }

var fileDescriptor_1e89d0eaa98dc5d8 = []byte{
	// 158 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xca, 0xcf, 0xcf,
	0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xc9, 0x4d, 0xcc, 0xcc, 0x53, 0xb2, 0xe1, 0xe2,
	0x71, 0xca, 0xcf, 0xcf, 0x2e, 0x0e, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x12, 0xe1, 0x62,
	0x2d, 0xc9, 0x2c, 0xc9, 0x49, 0x95, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x70, 0x84, 0xc4,
	0xb8, 0xd8, 0x12, 0x4b, 0x4b, 0x32, 0xf2, 0x8b, 0x24, 0x98, 0xc0, 0xc2, 0x50, 0x9e, 0x92, 0x2a,
	0x17, 0xb7, 0x63, 0x5e, 0x71, 0x79, 0x6a, 0x51, 0x50, 0x6a, 0x41, 0x4e, 0x25, 0x48, 0x59, 0x51,
	0x6a, 0x71, 0x69, 0x4e, 0x09, 0x54, 0x37, 0x94, 0x67, 0x64, 0x07, 0xb5, 0x24, 0x38, 0xb5, 0xa8,
	0x2c, 0x33, 0x39, 0x55, 0x48, 0x8f, 0x8b, 0xd9, 0x31, 0x25, 0x45, 0x48, 0x48, 0x0f, 0xe4, 0x04,
	0x3d, 0x64, 0xfb, 0xa5, 0x04, 0x21, 0x62, 0x48, 0xa6, 0x2a, 0x31, 0x24, 0xb1, 0x81, 0x5d, 0x6c,
	0x0c, 0x08, 0x00, 0x00, 0xff, 0xff, 0xa4, 0x3e, 0x47, 0x0f, 0xbf, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// BooksServiceClient is the client API for BooksService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BooksServiceClient interface {
	Add(ctx context.Context, in *BooksRequest, opts ...grpc.CallOption) (*AnswerReply, error)
}

type booksServiceClient struct {
	cc *grpc.ClientConn
}

func NewBooksServiceClient(cc *grpc.ClientConn) BooksServiceClient {
	return &booksServiceClient{cc}
}

func (c *booksServiceClient) Add(ctx context.Context, in *BooksRequest, opts ...grpc.CallOption) (*AnswerReply, error) {
	out := new(AnswerReply)
	err := c.cc.Invoke(ctx, "/main.BooksService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BooksServiceServer is the server API for BooksService service.
type BooksServiceServer interface {
	Add(context.Context, *BooksRequest) (*AnswerReply, error)
}

// UnimplementedBooksServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBooksServiceServer struct {
}

func (*UnimplementedBooksServiceServer) Add(ctx context.Context, req *BooksRequest) (*AnswerReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}

func RegisterBooksServiceServer(s *grpc.Server, srv BooksServiceServer) {
	s.RegisterService(&_BooksService_serviceDesc, srv)
}

func _BooksService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BooksServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.BooksService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BooksServiceServer).Add(ctx, req.(*BooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BooksService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.BooksService",
	HandlerType: (*BooksServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _BooksService_Add_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "book.proto",
}
